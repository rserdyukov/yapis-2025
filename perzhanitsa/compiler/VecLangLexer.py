# Generated from VecLang.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
from typing import TextIO



def serializedATN():
    return [
        4,0,55,391,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,2,54,7,54,1,0,1,0,1,1,1,1,1,1,1,1,1,2,1,2,1,2,
        1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,
        1,5,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,9,
        1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,11,1,11,
        1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,12,1,13,1,13,
        1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,
        1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,17,
        1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,19,1,19,
        1,19,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,21,1,21,1,22,1,22,
        1,22,1,22,1,22,1,22,1,22,1,23,1,23,1,23,1,23,1,23,1,24,1,24,1,24,
        1,25,1,25,1,25,1,26,1,26,1,26,1,27,1,27,1,27,1,28,1,28,1,29,1,29,
        1,30,1,30,1,30,1,30,1,31,1,31,1,31,1,32,1,32,1,33,1,33,1,34,1,34,
        1,35,1,35,1,36,1,36,1,37,1,37,1,38,1,38,1,39,1,39,1,40,1,40,1,41,
        1,41,1,42,1,42,1,43,1,43,1,44,1,44,1,45,1,45,1,46,1,46,1,47,1,47,
        1,48,1,48,1,48,1,48,5,48,301,8,48,10,48,12,48,304,9,48,1,48,1,48,
        1,49,4,49,309,8,49,11,49,12,49,310,1,49,1,49,5,49,315,8,49,10,49,
        12,49,318,9,49,1,49,1,49,3,49,322,8,49,1,49,4,49,325,8,49,11,49,
        12,49,326,3,49,329,8,49,1,49,1,49,4,49,333,8,49,11,49,12,49,334,
        1,49,1,49,3,49,339,8,49,1,49,4,49,342,8,49,11,49,12,49,343,3,49,
        346,8,49,3,49,348,8,49,1,50,4,50,351,8,50,11,50,12,50,352,1,51,1,
        51,5,51,357,8,51,10,51,12,51,360,9,51,1,52,4,52,363,8,52,11,52,12,
        52,364,1,52,1,52,1,53,1,53,5,53,371,8,53,10,53,12,53,374,9,53,1,
        53,1,53,1,54,1,54,1,54,1,54,5,54,382,8,54,10,54,12,54,385,9,54,1,
        54,1,54,1,54,1,54,1,54,1,383,0,55,1,1,3,2,5,3,7,4,9,5,11,6,13,7,
        15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,
        37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,
        59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,
        81,41,83,42,85,43,87,44,89,45,91,46,93,47,95,48,97,49,99,50,101,
        51,103,52,105,53,107,54,109,55,1,0,8,4,0,10,10,13,13,34,34,92,92,
        1,0,48,57,2,0,69,69,101,101,2,0,43,43,45,45,3,0,65,90,95,95,97,122,
        4,0,48,57,65,90,95,95,97,122,3,0,9,10,13,13,32,32,2,0,10,10,13,13,
        407,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,
        0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,
        0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,
        0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,
        0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,
        0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,
        0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,
        0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,
        0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,
        0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,
        0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,
        0,0,0,1,111,1,0,0,0,3,113,1,0,0,0,5,117,1,0,0,0,7,120,1,0,0,0,9,
        125,1,0,0,0,11,131,1,0,0,0,13,137,1,0,0,0,15,141,1,0,0,0,17,144,
        1,0,0,0,19,151,1,0,0,0,21,156,1,0,0,0,23,164,1,0,0,0,25,171,1,0,
        0,0,27,177,1,0,0,0,29,183,1,0,0,0,31,188,1,0,0,0,33,194,1,0,0,0,
        35,199,1,0,0,0,37,205,1,0,0,0,39,212,1,0,0,0,41,219,1,0,0,0,43,223,
        1,0,0,0,45,229,1,0,0,0,47,236,1,0,0,0,49,241,1,0,0,0,51,244,1,0,
        0,0,53,247,1,0,0,0,55,250,1,0,0,0,57,253,1,0,0,0,59,255,1,0,0,0,
        61,257,1,0,0,0,63,261,1,0,0,0,65,264,1,0,0,0,67,266,1,0,0,0,69,268,
        1,0,0,0,71,270,1,0,0,0,73,272,1,0,0,0,75,274,1,0,0,0,77,276,1,0,
        0,0,79,278,1,0,0,0,81,280,1,0,0,0,83,282,1,0,0,0,85,284,1,0,0,0,
        87,286,1,0,0,0,89,288,1,0,0,0,91,290,1,0,0,0,93,292,1,0,0,0,95,294,
        1,0,0,0,97,296,1,0,0,0,99,347,1,0,0,0,101,350,1,0,0,0,103,354,1,
        0,0,0,105,362,1,0,0,0,107,368,1,0,0,0,109,377,1,0,0,0,111,112,5,
        38,0,0,112,2,1,0,0,0,113,114,5,100,0,0,114,115,5,101,0,0,115,116,
        5,102,0,0,116,4,1,0,0,0,117,118,5,105,0,0,118,119,5,102,0,0,119,
        6,1,0,0,0,120,121,5,101,0,0,121,122,5,108,0,0,122,123,5,115,0,0,
        123,124,5,101,0,0,124,8,1,0,0,0,125,126,5,119,0,0,126,127,5,104,
        0,0,127,128,5,105,0,0,128,129,5,108,0,0,129,130,5,101,0,0,130,10,
        1,0,0,0,131,132,5,117,0,0,132,133,5,110,0,0,133,134,5,116,0,0,134,
        135,5,105,0,0,135,136,5,108,0,0,136,12,1,0,0,0,137,138,5,102,0,0,
        138,139,5,111,0,0,139,140,5,114,0,0,140,14,1,0,0,0,141,142,5,105,
        0,0,142,143,5,110,0,0,143,16,1,0,0,0,144,145,5,115,0,0,145,146,5,
        119,0,0,146,147,5,105,0,0,147,148,5,116,0,0,148,149,5,99,0,0,149,
        150,5,104,0,0,150,18,1,0,0,0,151,152,5,99,0,0,152,153,5,97,0,0,153,
        154,5,115,0,0,154,155,5,101,0,0,155,20,1,0,0,0,156,157,5,100,0,0,
        157,158,5,101,0,0,158,159,5,102,0,0,159,160,5,97,0,0,160,161,5,117,
        0,0,161,162,5,108,0,0,162,163,5,116,0,0,163,22,1,0,0,0,164,165,5,
        114,0,0,165,166,5,101,0,0,166,167,5,116,0,0,167,168,5,117,0,0,168,
        169,5,114,0,0,169,170,5,110,0,0,170,24,1,0,0,0,171,172,5,119,0,0,
        172,173,5,114,0,0,173,174,5,105,0,0,174,175,5,116,0,0,175,176,5,
        101,0,0,176,26,1,0,0,0,177,178,5,112,0,0,178,179,5,114,0,0,179,180,
        5,105,0,0,180,181,5,110,0,0,181,182,5,116,0,0,182,28,1,0,0,0,183,
        184,5,114,0,0,184,185,5,101,0,0,185,186,5,97,0,0,186,187,5,100,0,
        0,187,30,1,0,0,0,188,189,5,114,0,0,189,190,5,97,0,0,190,191,5,105,
        0,0,191,192,5,115,0,0,192,193,5,101,0,0,193,32,1,0,0,0,194,195,5,
        116,0,0,195,196,5,114,0,0,196,197,5,117,0,0,197,198,5,101,0,0,198,
        34,1,0,0,0,199,200,5,102,0,0,200,201,5,97,0,0,201,202,5,108,0,0,
        202,203,5,115,0,0,203,204,5,101,0,0,204,36,1,0,0,0,205,206,5,118,
        0,0,206,207,5,101,0,0,207,208,5,99,0,0,208,209,5,116,0,0,209,210,
        5,111,0,0,210,211,5,114,0,0,211,38,1,0,0,0,212,213,5,109,0,0,213,
        214,5,97,0,0,214,215,5,116,0,0,215,216,5,114,0,0,216,217,5,105,0,
        0,217,218,5,120,0,0,218,40,1,0,0,0,219,220,5,105,0,0,220,221,5,110,
        0,0,221,222,5,116,0,0,222,42,1,0,0,0,223,224,5,102,0,0,224,225,5,
        108,0,0,225,226,5,111,0,0,226,227,5,97,0,0,227,228,5,116,0,0,228,
        44,1,0,0,0,229,230,5,115,0,0,230,231,5,116,0,0,231,232,5,114,0,0,
        232,233,5,105,0,0,233,234,5,110,0,0,234,235,5,103,0,0,235,46,1,0,
        0,0,236,237,5,97,0,0,237,238,5,117,0,0,238,239,5,116,0,0,239,240,
        5,111,0,0,240,48,1,0,0,0,241,242,5,61,0,0,242,243,5,61,0,0,243,50,
        1,0,0,0,244,245,5,33,0,0,245,246,5,61,0,0,246,52,1,0,0,0,247,248,
        5,60,0,0,248,249,5,61,0,0,249,54,1,0,0,0,250,251,5,62,0,0,251,252,
        5,61,0,0,252,56,1,0,0,0,253,254,5,60,0,0,254,58,1,0,0,0,255,256,
        5,62,0,0,256,60,1,0,0,0,257,258,5,97,0,0,258,259,5,110,0,0,259,260,
        5,100,0,0,260,62,1,0,0,0,261,262,5,111,0,0,262,263,5,114,0,0,263,
        64,1,0,0,0,264,265,5,61,0,0,265,66,1,0,0,0,266,267,5,43,0,0,267,
        68,1,0,0,0,268,269,5,45,0,0,269,70,1,0,0,0,270,271,5,42,0,0,271,
        72,1,0,0,0,272,273,5,47,0,0,273,74,1,0,0,0,274,275,5,124,0,0,275,
        76,1,0,0,0,276,277,5,40,0,0,277,78,1,0,0,0,278,279,5,41,0,0,279,
        80,1,0,0,0,280,281,5,123,0,0,281,82,1,0,0,0,282,283,5,125,0,0,283,
        84,1,0,0,0,284,285,5,91,0,0,285,86,1,0,0,0,286,287,5,93,0,0,287,
        88,1,0,0,0,288,289,5,44,0,0,289,90,1,0,0,0,290,291,5,59,0,0,291,
        92,1,0,0,0,292,293,5,58,0,0,293,94,1,0,0,0,294,295,5,46,0,0,295,
        96,1,0,0,0,296,302,5,34,0,0,297,301,8,0,0,0,298,299,5,92,0,0,299,
        301,9,0,0,0,300,297,1,0,0,0,300,298,1,0,0,0,301,304,1,0,0,0,302,
        300,1,0,0,0,302,303,1,0,0,0,303,305,1,0,0,0,304,302,1,0,0,0,305,
        306,5,34,0,0,306,98,1,0,0,0,307,309,7,1,0,0,308,307,1,0,0,0,309,
        310,1,0,0,0,310,308,1,0,0,0,310,311,1,0,0,0,311,312,1,0,0,0,312,
        316,5,46,0,0,313,315,7,1,0,0,314,313,1,0,0,0,315,318,1,0,0,0,316,
        314,1,0,0,0,316,317,1,0,0,0,317,328,1,0,0,0,318,316,1,0,0,0,319,
        321,7,2,0,0,320,322,7,3,0,0,321,320,1,0,0,0,321,322,1,0,0,0,322,
        324,1,0,0,0,323,325,7,1,0,0,324,323,1,0,0,0,325,326,1,0,0,0,326,
        324,1,0,0,0,326,327,1,0,0,0,327,329,1,0,0,0,328,319,1,0,0,0,328,
        329,1,0,0,0,329,348,1,0,0,0,330,332,5,46,0,0,331,333,7,1,0,0,332,
        331,1,0,0,0,333,334,1,0,0,0,334,332,1,0,0,0,334,335,1,0,0,0,335,
        345,1,0,0,0,336,338,7,2,0,0,337,339,7,3,0,0,338,337,1,0,0,0,338,
        339,1,0,0,0,339,341,1,0,0,0,340,342,7,1,0,0,341,340,1,0,0,0,342,
        343,1,0,0,0,343,341,1,0,0,0,343,344,1,0,0,0,344,346,1,0,0,0,345,
        336,1,0,0,0,345,346,1,0,0,0,346,348,1,0,0,0,347,308,1,0,0,0,347,
        330,1,0,0,0,348,100,1,0,0,0,349,351,7,1,0,0,350,349,1,0,0,0,351,
        352,1,0,0,0,352,350,1,0,0,0,352,353,1,0,0,0,353,102,1,0,0,0,354,
        358,7,4,0,0,355,357,7,5,0,0,356,355,1,0,0,0,357,360,1,0,0,0,358,
        356,1,0,0,0,358,359,1,0,0,0,359,104,1,0,0,0,360,358,1,0,0,0,361,
        363,7,6,0,0,362,361,1,0,0,0,363,364,1,0,0,0,364,362,1,0,0,0,364,
        365,1,0,0,0,365,366,1,0,0,0,366,367,6,52,0,0,367,106,1,0,0,0,368,
        372,5,35,0,0,369,371,8,7,0,0,370,369,1,0,0,0,371,374,1,0,0,0,372,
        370,1,0,0,0,372,373,1,0,0,0,373,375,1,0,0,0,374,372,1,0,0,0,375,
        376,6,53,0,0,376,108,1,0,0,0,377,378,5,47,0,0,378,379,5,42,0,0,379,
        383,1,0,0,0,380,382,9,0,0,0,381,380,1,0,0,0,382,385,1,0,0,0,383,
        384,1,0,0,0,383,381,1,0,0,0,384,386,1,0,0,0,385,383,1,0,0,0,386,
        387,5,42,0,0,387,388,5,47,0,0,388,389,1,0,0,0,389,390,6,54,0,0,390,
        110,1,0,0,0,18,0,300,302,310,316,321,326,328,334,338,343,345,347,
        352,358,364,372,383,1,6,0,0
    ]

class VecLangLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    DEF = 2
    IF = 3
    ELSE = 4
    WHILE = 5
    UNTIL = 6
    FOR = 7
    IN = 8
    SWITCH = 9
    CASE = 10
    DEFAULT = 11
    RETURN = 12
    WRITE = 13
    PRINT = 14
    READ = 15
    RAISE = 16
    TRUE = 17
    FALSE = 18
    VECTOR = 19
    MATRIX = 20
    INT_TYPE = 21
    FLOAT_TYPE = 22
    STRING_TYPE = 23
    AUTO = 24
    EQ = 25
    NEQ = 26
    LE = 27
    GE = 28
    LT = 29
    GT = 30
    AND = 31
    OR = 32
    ASSIGN = 33
    ADD = 34
    SUB = 35
    MUL = 36
    DIV = 37
    PIPE = 38
    LPAREN = 39
    RPAREN = 40
    LBRACE = 41
    RBRACE = 42
    LBRACK = 43
    RBRACK = 44
    COMMA = 45
    SEMI = 46
    COLON = 47
    DOT = 48
    STRING = 49
    FLOAT = 50
    INT = 51
    ID = 52
    WS = 53
    COMMENT = 54
    ML_COMMENT = 55

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'&'", "'def'", "'if'", "'else'", "'while'", "'until'", "'for'", 
            "'in'", "'switch'", "'case'", "'default'", "'return'", "'write'", 
            "'print'", "'read'", "'raise'", "'true'", "'false'", "'vector'", 
            "'matrix'", "'int'", "'float'", "'string'", "'auto'", "'=='", 
            "'!='", "'<='", "'>='", "'<'", "'>'", "'and'", "'or'", "'='", 
            "'+'", "'-'", "'*'", "'/'", "'|'", "'('", "')'", "'{'", "'}'", 
            "'['", "']'", "','", "';'", "':'", "'.'" ]

    symbolicNames = [ "<INVALID>",
            "DEF", "IF", "ELSE", "WHILE", "UNTIL", "FOR", "IN", "SWITCH", 
            "CASE", "DEFAULT", "RETURN", "WRITE", "PRINT", "READ", "RAISE", 
            "TRUE", "FALSE", "VECTOR", "MATRIX", "INT_TYPE", "FLOAT_TYPE", 
            "STRING_TYPE", "AUTO", "EQ", "NEQ", "LE", "GE", "LT", "GT", 
            "AND", "OR", "ASSIGN", "ADD", "SUB", "MUL", "DIV", "PIPE", "LPAREN", 
            "RPAREN", "LBRACE", "RBRACE", "LBRACK", "RBRACK", "COMMA", "SEMI", 
            "COLON", "DOT", "STRING", "FLOAT", "INT", "ID", "WS", "COMMENT", 
            "ML_COMMENT" ]

    ruleNames = [ "T__0", "DEF", "IF", "ELSE", "WHILE", "UNTIL", "FOR", 
                  "IN", "SWITCH", "CASE", "DEFAULT", "RETURN", "WRITE", 
                  "PRINT", "READ", "RAISE", "TRUE", "FALSE", "VECTOR", "MATRIX", 
                  "INT_TYPE", "FLOAT_TYPE", "STRING_TYPE", "AUTO", "EQ", 
                  "NEQ", "LE", "GE", "LT", "GT", "AND", "OR", "ASSIGN", 
                  "ADD", "SUB", "MUL", "DIV", "PIPE", "LPAREN", "RPAREN", 
                  "LBRACE", "RBRACE", "LBRACK", "RBRACK", "COMMA", "SEMI", 
                  "COLON", "DOT", "STRING", "FLOAT", "INT", "ID", "WS", 
                  "COMMENT", "ML_COMMENT" ]

    grammarFileName = "VecLang.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


